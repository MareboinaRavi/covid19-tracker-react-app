{"version":3,"sources":["Components/Didplay.js","App.js","index.js"],"names":["Didplay","searchTerm","countries","id","filter","val","country","toLowerCase","includes","map","cases","deaths","recovered","active","App","useState","setCountries","setLoading","setSearchTerm","useEffect","fetchCountries","a","fetch","res","json","data","console","log","className","type","placeholder","onChange","e","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAsCeA,EAnCC,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,WAAWC,EAAe,EAAfA,UACvB,OACM,8BACM,wBAAOC,GAAG,YAAV,UACM,+BACM,yCACA,uCACA,wCACA,0CACA,2CAGAD,EAAUE,QAAO,SAACC,GAClB,MAAgB,IAAZJ,GAGWI,EAAIC,QAAQC,cAAcC,SAASP,EAAWM,eAFhDF,OAEF,KAGdI,KAAI,SAACH,GACF,OAAO,+BACD,6BAAKA,EAAQA,UACb,6BAAKA,EAAQI,QACb,6BAAKJ,EAAQK,SACb,6BAAKL,EAAQM,YACb,6BAAKN,EAAQO,WALHP,EAAQA,kBC0CvCQ,MA7Df,WACE,MAAkCC,mBAAS,IAA3C,mBAAOb,EAAP,KAAkBc,EAAlB,KACA,EAA8BD,oBAAS,GAAvC,mBAAgBE,GAAhB,WACA,EAAoCF,mBAAS,IAA7C,mBAAOd,EAAP,KAAmBiB,EAAnB,KAEAC,qBAAU,WACRC,MAKC,IACH,IAAMA,EAAc,uCAAG,8BAAAC,EAAA,6DACrBJ,GAAW,GADU,kBAGDK,MAAM,2HAHL,cAGbC,EAHa,gBAIAA,EAAIC,OAJJ,OAIbC,EAJa,OAKnBC,QAAQC,IAAIF,GACZT,EAAaS,GANM,kDAsBnBR,GAAW,GACXS,QAAQC,IAAR,MAvBmB,0DAAH,qDA6BpB,OACE,sBAAKC,UAAU,MAAf,UACE,qDAEA,uBACIC,KAAK,OACLC,YAAY,qBACdC,SAAU,SAACC,GAAQd,EAAcc,EAAEC,OAAOC,UAC5C,uBACA,uBACA,cAAC,EAAD,CAASjC,WAAYA,EAAYC,UAAWA,QClDlDiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.088825ad.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Display.css'\r\n\r\nconst Didplay = ({searchTerm,countries}) => {\r\n      return (\r\n            <div>\r\n                  <table id=\"customers\">\r\n                        <tr>\r\n                              <th>Country</th>\r\n                              <th>Cases</th>\r\n                              <th>Deaths</th>\r\n                              <th>Recoverd</th>\r\n                              <th>Active</th>\r\n                        </tr>\r\n                  {\r\n                              countries.filter((val) => {\r\n                              if (searchTerm==\"\") {\r\n                                    return val;\r\n                                    }\r\n                                    else if (val.country.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                                    return val;\r\n                                    }\r\n                        }).map((country) => {\r\n                              return <tr key={country.country}>\r\n                                    <td>{country.country}</td>\r\n                                    <td>{country.cases}</td>\r\n                                    <td>{country.deaths}</td>\r\n                                    <td>{country.recovered}</td>\r\n                                    <td>{country.active}</td>\r\n                              </tr>\r\n                        })\r\n                  }\r\n                  </table>\r\n                  \r\n            </div>\r\n      )\r\n}\r\n\r\nexport default Didplay\r\n","import React,{useState,useEffect} from 'react';\nimport './App.css';\nimport Didplay from './Components/Didplay';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  // const [stats, setStats] = useState([]);\n  useEffect(() => {\n    fetchCountries();\n    // return () => {\n    //   cleanup\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const fetchCountries = async () => {\n    setLoading(true);\n    try {\n      const res = await fetch('https://coronavirus-19-api.herokuapp.com/countries?fbclid=IwAR258aqkSrZIN6Z6lr0vi1brTozpO_i-lFG_PvtvsIVo0y1XXic7D8WEjNQ');\n      const data = await res.json();\n      console.log(data);\n      setCountries(data);\n      // countries.forEach(c => {\n      //   console.log(c)\n      // })\n  //     countries.forEach(async country => {\n  //       const resp = await fetch(`https://api.covid19api.com/total/country/${country.Slug}`);\n  //       const newData = resp.json();\n  //       console.log(newData)\n  //       if (newData.length) {\n  //         setStats(...stats,stats.concat(newData));\n  //       }\n  //       })\n  // console.log(stats)\n\n    }\n    catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  }\n  if (loading) {\n    <h2>Loading.....</h2>\n  }\n  return (\n    <div className=\"App\">\n      <h1>Fake Corona-Tracker</h1>\n     \n      <input\n          type=\"text\"\n          placeholder=\"Search Country....\"\n        onChange={(e) => { setSearchTerm(e.target.value) }} />\n      <br />\n      <br/>\n      <Didplay searchTerm={searchTerm} countries={countries}/>\n      {/* {\n        countries.map((country) => {\n          return <h4 key={country.Country}>{country.Country}</h4>\n        })\n      } */}\n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}